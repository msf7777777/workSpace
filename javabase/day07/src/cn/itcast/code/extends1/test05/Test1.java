package cn.itcast.code.extends1.test05;

/*
    当子父类中出现重名的属性:
        遵循就近原则
    当子父类中出现相同的方法时:(方法名相同, 参数列表也相同)
        遵循就近原则
        这种现象: 我们成员方法的重写
        重载:
            发生在一个类中,出现方法名相同,参数列表不同的情况
        重写:
            发生子父类中,实现类和接口中, 子类出现和父类方法声明一样的方法的现象
            我们可以使用@Override来帮助我们检测是否正确重写, 但是如果这个注解没有写
            只要方法满足重写的条件, 依然是重写
        为啥要重写????子类不是可以直接使用父类的内容吗???为啥还要重写呢????
        使用场景:
            只有当我们对父类方法不满意的时候, 我们需要重写!!!!!!!!!!!
        注意:
            子类不能重写父类中私有的方法, 子类不能直接看到父类中的私有的东西的



 */
public class Test1 {

    public static void main(String[] args) {
        Zi zi = new Zi();
       // zi.method(10);

    }
}

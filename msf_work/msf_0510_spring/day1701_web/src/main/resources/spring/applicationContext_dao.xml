<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 1 加载外部的 jdbc.properties 文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 2 数据源（连接池）-->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!-- 3 将 sqlSessionFactory 交给spring管理（ spring 和 mybatis 的整合）-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 3.1 配置连接池-->
        <property name="dataSource" ref="druidDataSource"/>
        <!-- 3.2 加载 mybatis 的核心配置文件（可选的）-->
        <!-- 3.3 加载保存 sql 语句的 mapper 文件 -->
        <!--classpath:mybatis/mapper/*Mapper.xml  指定 mapper 文件的位置-->
        <property name="mapperLocations" value="classpath:mybatis/mapper/*Mapper.xml"/>
        <!-- 3.4 给 pojo 包的类起别名 -->
        <property name="typeAliasesPackage" value="cn.itcast.pojo"/>
    </bean>
    <!-- 4 将 mapper 接口的实现类交给spring管理-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.itcast.mapper"/>
    </bean>
</beans>
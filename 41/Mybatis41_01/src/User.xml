<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：命名空间，用于隔离sql -->
<mapper namespace="test">

    <!-- findAll -->

    <select id="findAll" resultType="com.itheima.pojo.User">
        select * from user
    </select>

    <!-- 实现根据id查询用户
        id: 代表语句的唯一名称
        parameterType : 传入的参数的类型
        resultType : 返回的结果对应的JavaBean类型
        #{id}: 类似JDBC中的占位符
    -->
    <select id="findById" parameterType="int" resultType="com.itheima.pojo.User">
        select * from user where id=#{id}
    </select>


    <!--实现根据用户名模糊查询用户
        #号代表是占位符,不能写在单引号里边
    -->
    <select id="findByName1" parameterType="String" resultType="com.itheima.pojo.User">
        SELECT * FROM user WHERE username like #{username};
    </select>

    <!--实现根据用户名模糊查询用户
        $ 代表是字符串的拼接,如果是基本类型,那么$里边只能写value
    -->
    <select id="findByName2" parameterType="String" resultType="com.itheima.pojo.User">
        SELECT * FROM user WHERE username like '%${value}%';
    </select>

    <!--添加用户-->
    <insert id="addUser1" parameterType="com.itheima.pojo.User">
        insert into user(username,birthday,sex,address) values(#{username},#{birthday},#{sex},#{address});
    </insert>


    <!--添加用户,并返回ID-->
    <insert id="addUser2" parameterType="com.itheima.pojo.User">

        <selectKey order="AFTER" resultType="int" keyColumn="id" keyProperty="id">
            select LAST_INSERT_ID();
        </selectKey>
        insert into user(username,birthday,sex,address) values(#{username},#{birthday},#{sex},#{address});
    </insert>


    <!--添加用户,并返回ID-->
    <insert id="addUser3" parameterType="com.itheima.pojo.User1">

        <selectKey order="BEFORE" resultType="String" keyProperty="id">
            SELECT UUID()
        </selectKey>

        insert into user1(id,username,birthday,sex,address)
        values(#{id},#{username},#{birthday},#{sex},#{address});

    </insert>


    <!--# 根据用户id修改用户名-->
    <update id="updateUser" parameterType="com.itheima.pojo.User">
        UPDATE `user` SET username = #{username} WHERE id = #{id}
    </update>



   <!-- # 使用的sql-->
    <delete id="deleteById" parameterType="int">
         DELETE FROM `user` WHERE id = #{id}
    </delete>

</mapper>
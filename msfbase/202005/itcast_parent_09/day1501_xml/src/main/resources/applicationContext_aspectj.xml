<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/aop
                            http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--1 将目标类交给spring管理-->
    <bean id="accountDao1" class="cn.itcast.a.AccountDao"/>

    <bean id="accountService" class="cn.itcast.a.AccountService">
        <!--设置属性-->
        <property name="accountDao" ref="accountDao1"/>
    </bean>

    <!--2 将增强类 交给spring容器管理-->
    <bean id="myAspectj" class="cn.itcast.a.MyAspectj"/>

    <!--3 建立 目标类和增强类的关系-->
    <!--proxy-target-class="false" 是否优先使用cglib动态代理-->
    <aop:config proxy-target-class="false">
        <!--切面, 增强类, 增强类的每个方法都是增强方法(切入点)  -->
        <aop:aspect ref="myAspectj">
            <!--3.1 确定目标类是谁-->
            <aop:pointcut id="myPointcut" expression="bean(*Service)"/>
            <!--3.2 建立增强方法和目标类的关系-->
            <!--3.2.1 环绕增强-->
            <!--<aop:around method="aroundAdvice" pointcut-ref="myPointcut"/>-->
            <!--3.2.2 前置增强-->
            <aop:before method="beforeAdvice" pointcut-ref="myPointcut"/>
            <!--3.2.3 后置增强-->
            <aop:after-returning method="afterReturnAdvice" pointcut-ref="myPointcut" returning="retrunResult"/>
            <!--3.2.4 后置异常处理-->
            <aop:after-throwing method="afterThrowAdvice" pointcut-ref="myPointcut" throwing="ex"/>
            <!--3.2.5 最终增强-->
           <aop:after method="afterAdvice" pointcut-ref="myPointcut"/>
        </aop:aspect>
    </aop:config>

</beans>
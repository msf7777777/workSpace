<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--1 配置目标类-->
    <bean id="productService" class="cn.itcast.service.ProductServiceImpl"/>
    <bean id="customerService" class="cn.itcast.service.CustomerServiceImpl"/>

    <!--2 增强类-->
    <bean id="myMethodInterceptor" class="cn.itcast.proxy.MyMethodInterceptor"/>

    <!--3 配置切入点和切面-->
    <aop:config proxy-target-class="false">
        <!--方式一-->
        <!--<aop:pointcut id="myPointcut" expression="bean(*Service)"/>-->
        <!--方式二-->
        <!--<aop:pointcut id="myPointcut" expression="execution(* cn.itcast.service.*Service..q*(..)) "/>-->
        <!--方式三-->
        <aop:pointcut id="myPointcut" expression="within(cn.itcast.service..*)"/>

        <aop:advisor advice-ref="myMethodInterceptor" pointcut-ref="myPointcut"/>
    </aop:config>


    <!--2.1 目标类-->
    <bean id="accountDao" class="cn.itcast.b_aspect.AccountDao"/>
    <bean id="accountService" class="cn.itcast.b_aspect.AccountService">
        <property name="accountDao" ref="accountDao"/>
    </bean>

    <!--2.2 配置增强类-->
    <bean id="myAspectj" class="cn.itcast.b_aspect.MyAspectj"/>

    <!--2.3 配置切入点和切面-->
    <aop:config proxy-target-class="false">
        <aop:aspect ref="myAspectj">
            <aop:pointcut id="myPointcut" expression="bean(*Service)"/>
            <!--1 环绕通知-->
            <!--<aop:around method="around" pointcut-ref="myPointcut"/>-->
            <!--2 前置通知-->
            <aop:before method="beforeAdvice" pointcut-ref="myPointcut"/>
            <!--3 后置通知-->
            <aop:after-returning method="afterReturn" pointcut-ref="myPointcut" returning="returnObject"/>
            <!--4 后置抛出异常-->
            <aop:after-throwing method="afterThrow" pointcut-ref="myPointcut" throwing="ex"/>
            <!--5 最终通知-->
            <aop:after method="after" pointcut-ref="myPointcut"/>
        </aop:aspect>
    </aop:config>
</beans>